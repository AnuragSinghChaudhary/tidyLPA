return(list(class_means, class_sds))
}
extract_prob_stats(x$tech7)
extract_prob_stats(1, x$tech7)
extract_prob_stats(2, x$tech7)
seq(x$tech7) %>%
extract_prob_stats(class_num = ., obj = x$tech7)
1:2 %>%
extract_prob_stats(class_num = ., obj = x$tech7)
1 %>%
extract_prob_stats(class_num = ., obj = x$tech7)
2 %>%
extract_prob_stats(class_num = ., obj = x$tech7)
seq(x$tech7) %>%
map(extract_prob_stats, class_num = ., obj = x$tech7)
seq(x$tech7) %>%
map(extract_prob_stats, obj = x$tech7)
extract_prob_stats <- function(class_num, obj) {
class_means <- obj[[class_num]]$classSampMeans
class_sds <- sqrt(diag(obj[[class_num]]$classSampCovs))
data_frame(class_means, class_sds)
}
extract_prob_stats(1, x$tech7)
extract_prob_stats <- function(class_num, obj) {
class_means <- obj[[class_num]]$classSampMeans
class_sds <- sqrt(diag(obj[[class_num]]$classSampCovs))
data_frame(as.vector(class_means), as.vector(class_sds))
}
extract_prob_stats(1, x$tech7)
extract_prob_stats <- function(class_num, obj) {
class_means <- obj[[class_num]]$classSampMeans
class_sds <- sqrt(diag(obj[[class_num]]$classSampCovs))
data_frame(class_means = as.vector(class_means),
class_sds = as.vector(class_sds))
}
extract_prob_stats(1, x$tech7)
extract_prob_stats <- function(class_num, obj) {
vars <- rownames(obj[[class_num]]$classSampMeans)
class_means <- obj[[class_num]]$classSampMeans
class_sds <- sqrt(diag(obj[[class_num]]$classSampCovs))
data_frame(class_means = as.vector(class_means),
class_sds = as.vector(class_sds))
}
extract_prob_stats(1, x$tech7)
extract_prob_stats <- function(class_num, obj) {
vars <- rownames(obj[[class_num]]$classSampMeans)
class_means <- obj[[class_num]]$classSampMeans
class_sds <- sqrt(diag(obj[[class_num]]$classSampCovs))
data_frame(vars = vars,
lass_means = as.vector(class_means),
class_sds = as.vector(class_sds))
}
extract_prob_stats(1, x$tech7)
x$tech7
x$tech7$CLASS.1$classSampCovs
rownames(x$tech7$CLASS.1$classSampCovs)
rownames(x$tech7$CLASS.1$classSampMeans)
extract_prob_stats <- function(class_num, obj) {
vars <- rownames(obj[[class_num]]$classSampCovs)
class_means <- obj[[class_num]]$classSampMeans
class_sds <- sqrt(diag(obj[[class_num]]$classSampCovs))
data_frame(vars = vars,
lass_means = as.vector(class_means),
class_sds = as.vector(class_sds))
}
rownames(x$tech7$CLASS.1$classSampMeans)
extract_prob_stats(1, x$tech7)
extract_prob_stats <- function(class_num, obj) {
vars <- rownames(obj[[class_num]]$classSampCovs)
class_means <- obj[[class_num]]$classSampMeans
class_sds <- sqrt(diag(obj[[class_num]]$classSampCovs))
data_frame(var = vars,
class_mean = as.vector(class_means),
class_sd = as.vector(class_sds))
}
seq(x$tech7) %>%
map(extract_prob_stats, obj = x$tech7)
extract_prob_stats <- function(class_num, obj) {
vars <- rownames(obj[[class_num]]$classSampCovs)
class_means <- obj[[class_num]]$classSampMeans
class_sds <- sqrt(diag(obj[[class_num]]$classSampCovs))
data_frame(var = vars,
class_mean = as.vector(class_means),
class_sd = as.vector(class_sds),
class = class_num)
}
seq(x$tech7) %>%
map(extract_prob_stats, obj = x$tech7)
seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7)
seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7)
x$savedata
x$savedata_info
number_of_rows <- length(x$savedata)
number_of_rows
length(x$savedata$SEPAL_LE)
x$savedata
seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = var,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rws)) * .025),
ymin = class_mean + ((class_sd / sqrt(number_of_rws)) * .025)
))
seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = var,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rws)) * .025),
ymin = class_mean + ((class_sd / sqrt(number_of_rws)) * .025)
)) +
geom_point()
seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = var,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rows)) * .025),
ymin = class_mean + ((class_sd / sqrt(number_of_rows)) * .025)
)) +
geom_point()
seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = var,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rows)) * .025),
ymin = class_mean + ((class_sd / sqrt(number_of_rows)) * .025)
)) +
geom_col()
seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = var,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rows)) * .025),
ymin = class_mean + ((class_sd / sqrt(number_of_rows)) * .025)
)) +
geom_col() +
geom_errorbar()
seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = var,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rows)) * .025),
ymax = class_mean + ((class_sd / sqrt(number_of_rows)) * .025)
)) +
geom_col() +
geom_errorbar()
seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7)
seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = var,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rows)) * .025),
ymax = class_mean + ((class_sd / sqrt(number_of_rows)) * .025),
fill = class
)) +
geom_col(position = "dodge") +
geom_errorbar(position = "dodge")
seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = var,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rows)) * .025),
ymax = class_mean + ((class_sd / sqrt(number_of_rows)) * .025),
fill = as.factor(class)
)) +
geom_col(position = "dodge") +
geom_errorbar(position = "dodge")
seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = var,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rows)) * .975),
ymax = class_mean + ((class_sd / sqrt(number_of_rows)) * .975),
fill = as.factor(class)
)) +
geom_col(position = "dodge") +
geom_errorbar(position = "dodge")
seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = var,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rows)) * se_diff),
ymax = class_mean + ((class_sd / sqrt(number_of_rows)) * se_diff),
fill = as.factor(class)
)) +
geom_col(position = "dodge") +
geom_errorbar(position = "dodge")
se_diff <- (1 - standard_error_pct) / 2
seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = var,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rows)) * se_diff),
ymax = class_mean + ((class_sd / sqrt(number_of_rows)) * se_diff),
fill = as.factor(class)
)) +
geom_col(position = "dodge") +
geom_errorbar(position = "dodge")
se_diff <- (1 - standard_error_pct) / 2
standard_error_pct = .95
se_diff <- (1 - standard_error_pct) / 2
seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = var,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rows)) * se_diff),
ymax = class_mean + ((class_sd / sqrt(number_of_rows)) * se_diff),
fill = as.factor(class)
)) +
geom_col(position = "dodge") +
geom_errorbar(position = "dodge")
se_diff <- standard_error_interval + ((1 - standard_error_interval) / 2)
standard_error_interval = .95
standard_error_interval + ((1 - standard_error_interval) / 2)
se_diff <- standard_error_interval + ((1 - standard_error_interval) / 2)
seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = var,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rows)) * se_diff),
ymax = class_mean + ((class_sd / sqrt(number_of_rows)) * se_diff),
fill = as.factor(class)
)) +
geom_col(position = "dodge") +
geom_errorbar(position = "dodge")
seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = var,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rows)) * se_diff),
ymax = class_mean + ((class_sd / sqrt(number_of_rows)) * se_diff),
fill = as.factor(class)
)) +
geom_col(position = "dodge") +
geom_errorbar(position = "dodge") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_discrete("")
seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = var,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rows)) * se_diff),
ymax = class_mean + ((class_sd / sqrt(number_of_rows)) * se_diff),
fill = as.factor(class)
)) +
geom_col(position = "dodge") +
geom_errorbar(position = "dodge") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_discrete("") +
scale_color_discrete("")
seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = var,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rows)) * se_diff),
ymax = class_mean + ((class_sd / sqrt(number_of_rows)) * se_diff),
fill = as.factor(class)
)) +
geom_col(position = "dodge") +
geom_errorbar(position = "dodge") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_discrete("") +
scale_fill_discrete("")
seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = var,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rows)) * se_diff),
ymax = class_mean + ((class_sd / sqrt(number_of_rows)) * se_diff),
fill = as.factor(class)
)) +
geom_col(position = "dodge") +
geom_errorbar(position = "dodge") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_discrete("") +
scale_fill_discrete("") +
ylab("Mean Value")
?estimate_profiles_mplus
m <- estimate_profiles_mplus(iris,
Sepal.Length, Sepal.Width, Petal.Length, Petal.Width,
n_profiles = 2)
m
m <- estimate_profiles_mplus(iris,
Sepal.Length, Sepal.Width, Petal.Length, Petal.Width,
n_profiles = 2, remove_tmp_files = FALSE)
plot_profiles_mplus(plot_post_probs = TRUE)
devtools::document()
devtools::load_all(".")
plot_profiles_mplus(plot_post_probs = TRUE)
devtools::load_all(".")
plot_profiles_mplus(plot_post_probs = TRUE)
devtools::load_all(".")
plot_profiles_mplus(plot_post_probs = TRUE)
devtools::load_all(".")
plot_profiles_mplus(plot_post_probs = TRUE)
devtools::load_all(".")
plot_profiles_mplus(plot_post_probs = TRUE)
m
plot_profiles_mplus(m)
plot_profiles_mplus(m, to_center = FALSE)
plot_profiles_mplus(plot_post_probs = TRUE)
devtools::load_all(".")
plot_profiles_mplus(plot_post_probs = TRUE)
x
x$savedata$C
z <- count(x$savedata, .data$C)
z
devtools::load_all(".")
plot_profiles_mplus(plot_post_probs = TRUE)
devtools::load_all(".")
plot_profiles_mplus(plot_post_probs = TRUE)
x <- suppressWarnings(MplusAutomation::readModels(mplus_out_name))
number_of_rows <- nrow(x$savedata)
se_diff <- standard_error_interval + ((1 - standard_error_interval) / 2)
z <- count(x$savedata, .data$C)
z
profile_names <- paste0("Profile ", z$C, " (n = ", z$n, ")")
profile_names
devtools::load_all(".")
z <- count(x$savedata, .data$C)
plot_profiles_mplus(plot_post_probs = TRUE)
devtools::load_all(".")
plot_profiles_mplus(plot_post_probs = TRUE)
devtools::load_all(".")
plot_profiles_mplus(plot_post_probs = TRUE)
z
devtools::load_all(".")
devtools::load_all(".")
plot_profiles_mplus(plot_post_probs = TRUE)
x <- plot_profiles_mplus(plot_post_probs = TRUE)
x + scale_x_discrete(c("dfd", "dsfd"))
x + scale_x_discrete(c("dfd", "dsfd"))
p <- seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = class,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rows)) * se_diff),
ymax = class_mean + ((class_sd / sqrt(number_of_rows)) * se_diff),
fill = var
))
p
p
devtools::load_all(".")
p <- seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = class,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rows)) * se_diff),
ymax = class_mean + ((class_sd / sqrt(number_of_rows)) * se_diff),
fill = var
))
x <- plot_profiles_mplus(plot_post_probs = TRUE)
x
p <- seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = class,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rows)) * se_diff),
ymax = class_mean + ((class_sd / sqrt(number_of_rows)) * se_diff),
fill = var
)) +
geom_col(position = "dodge") +
geom_errorbar(position = "dodge") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
# scale_x_discrete("", profile_names) +
scale_fill_discrete("") +
ylab("Mean")
devtools::load_all(".")
p <- seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = class,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rows)) * se_diff),
ymax = class_mean + ((class_sd / sqrt(number_of_rows)) * se_diff),
fill = var
)) +
geom_col(position = "dodge") +
geom_errorbar(position = "dodge") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
# scale_x_discrete("", profile_names) +
scale_fill_discrete("") +
ylab("Mean")
x <- plot_profiles_mplus(plot_post_probs = TRUE)
x
p <- seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = class,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rows)) * se_diff),
ymax = class_mean + ((class_sd / sqrt(number_of_rows)) * se_diff),
fill = var
)) +
geom_col(position = "dodge") +
geom_errorbar(position = "dodge") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_continuous("", profile_names) +
scale_fill_discrete("") +
ylab("Mean")
devtools::load_all(".")
x <- plot_profiles_mplus(plot_post_probs = TRUE)
x
x
p <- seq(x$tech7) %>%
map_df(extract_prob_stats, obj = x$tech7) %>%
ggplot(aes(x = class,
y = class_mean,
ymin = class_mean - ((class_sd / sqrt(number_of_rows)) * se_diff),
ymax = class_mean + ((class_sd / sqrt(number_of_rows)) * se_diff),
fill = var
)) +
geom_col(position = "dodge") +
geom_errorbar(position = "dodge") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_continuous("", labels = profile_names) +
scale_fill_discrete("") +
ylab("Mean")
devtools::load_all(".")
x <- plot_profiles_mplus(plot_post_probs = TRUE)
x
devtools::load_all(".")
x <- plot_profiles_mplus(plot_post_probs = TRUE)
x
x <- plot_profiles_mplus(m, to_center = FALSE, to_scale = FALSE)
xx <- plot_profiles_mplus(plot_post_probs = TRUE)
cowplot::plot_grid(x, xx)
?rownames
?diag
?sqrt
devtools::load_all(".")
devtools::load_all(".")
x <- plot_profiles_mplus(m, to_center = FALSE, to_scale = FALSE)
xx <- plot_profiles_mplus(plot_post_probs = TRUE)
?estimate_profiles_mplus
m <- estimate_profiles_mplus(iris,
Sepal.Length, Sepal.Width, Petal.Length, Petal.Width,
n_profiles = 2, remove_tmp_files=FALSE)
xx <- plot_profiles_mplus(plot_post_probs = TRUE)
devtools::load_all(".")
xx <- plot_profiles_mplus(plot_post_probs = TRUE)
cowplot::plot_grid(x, xx)
x <- plot_profiles_mplus(m, to_center = FALSE, to_scale = FALSE) + ggtitle("Using classification")
xx <- plot_profiles_mplus(plot_post_probs = TRUE) + ggtitle("Using posterior probability")
cowplot::plot_grid(x, xx)
devtools::check()
?slice
devtools::document()
devtools::check()
devtools::load_all(".")
devtools::document()
devtools::document()
devtools::check()
devtools::check()
devtools::document()
#' @return The status of finding Mplus. Per unix conventions,
#' status 0 indicates Mplus was found (0 problems) and
#' status 1 indicates that Mplus was not found.
#' @author Joshua Wiley
#' @keywords interface
#' @export
#' @examples
#'
#' mplusAvailable(silent = TRUE)
#' mplusAvailable(silent = FALSE)
mplusAvailable <- function(silent = TRUE) {
os <- .Platform$OS.type
if (identical(os, "windows")) {
res <- system2("where", args = "mplus.exe",
stdout = FALSE, stderr = FALSE)
note <- paste0(
"Mplus is either not installed or could not be found\n",
"Try installing Mplus or if Mplus is already installed, \n",
"make sure it can be found on your PATH, try\n\n",
"Windows 10 and Windows 8:\n",
" (1) In Search, search for and then select: System (Control Panel)\n",
" (2) Click the Advanced system settings link.\n",
" (3) Click Environment Variables ...\n",
" (4) In the Edit System Variable (or New System Variable ) window,\n",
" (5) specify the value of the PATH environment variable...\n",
" (6) Close and reopen R and run:\n\n",
"mplusAvailable(silent=FALSE)",
"\n")
}
if (identical(os, "unix")) {
res <- system2("type", args = "mplus",
stdout = FALSE, stderr = FALSE)
note <-     paste0(
"Mplus is either not installed or could not be found\n",
"Try installing Mplus or if it already is installed,\n",
"making sure it can be found by adding it to your PATH or adding a symlink\n\n",
"To see directories on your PATH, From a terminal, run:\n\n",
"echo $PATH",
"\n\nthen try something along these lines:\n\n",
"sudo ln -s /path/to/mplus/on/your/system /directory/on/your/PATH",
"\n")
}
if (!silent) message(c("Mplus is installed and can be found", note)[res+1])
return(invisible(res))
}
mplusAvailable()
x <- mplusAvailable()
x
mplusAvailable() ==1
